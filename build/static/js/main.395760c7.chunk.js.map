{"version":3,"sources":["components/persons.js","components/filter.js","components/personForm.js","services/person_methods.js","components/notification.js","App.js","index.js"],"names":["Person","props","name","number","onClick","remove","Filter","value","filter","onChange","handler","PersonForm","onSubmit","submit","handleName","handleNumber","type","baseUrl","personMethods","getAll","axios","get","then","response","data","create","newObject","post","id","delete","update","put","Notification","message","className","content","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","errorMessage","setErrorMessage","useEffect","names","filteredPersons","s","toLowerCase","indexOf","event","target","preventDefault","nameObject","nimet","map","n","includes","window","confirm","nameID","find","returnedName","p","setTimeout","catch","error","concat","gubbe","res","nimi","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.395760c7.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst Person = (props) => {\r\n\treturn (\r\n\t\t<p>\r\n\t\t{props.name} {props.number} <button onClick={props.remove}>remove</button>\r\n\t\t</p>\r\n\t\t)\r\n}\r\n\r\n\r\n      \r\n\r\nexport default Person\r\n","import React from 'react'\r\n\r\n\r\nconst Filter = (props) => {\r\n\treturn (\r\n\t\t<div>\r\n          filter: <input value={props.filter} onChange={props.handler} />\r\n        </div>\r\n\t\t)\r\n}\r\n      \r\n\r\nexport default Filter\r\n","import React from 'react'\r\n\r\n\r\nconst PersonForm = (props) => {\r\n\treturn (\r\n\t\t<form onSubmit={props.submit}>\r\n\r\n        <div>\r\n          name: <input value={props.name} onChange={props.handleName} />\r\n        </div>\r\n\r\n        <div>\r\n          number: <input value={props.number} onChange={props.handleNumber}/>\r\n        </div>\r\n\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n        \r\n        </form>\r\n\t\t)\r\n}\r\n      \r\n\r\n      \r\n\r\nexport default PersonForm","import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/api/Persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n\tconst request = axios.put(`${baseUrl}/${id}`, newObject)\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\nconst personMethods = {\r\n\tgetAll,\r\n\tcreate,\r\n\tremove,\r\n\tupdate,\r\n}\r\n\r\nexport default personMethods","import React from 'react'\r\n\r\n\r\nconst Notification = ({message}) => {\r\n\tif (message === null) {\r\n\t\treturn null\r\n\t}\r\n\r\n\tif(message.type) {\r\n\t\treturn (\r\n\t\t<div className=\"error\">\r\n          {message.content}\r\n        </div>\r\n\t\t)\r\n\t} else {\r\n\t\treturn (\r\n\t\t<div className=\"error2\">\r\n          {message.content}\r\n        </div>\r\n\t\t)\r\n\t}\r\n\r\n\t\r\n}\r\n      \r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\n\nimport Person from './components/persons'\nimport Filter from './components/filter'\nimport PersonForm from './components/personForm'\nimport personMethods from './services/person_methods'\nimport Notification from './components/notification'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n\n  const [ newName, setNewName ] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n\n\n  useEffect(() => {\n    personMethods\n    .getAll()\n    .then(names => {\n      setPersons(names)\n    })\n  }, [])\n\n\n\n\n  const addName = (event) => {\n    event.preventDefault()\n    const nameObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    const nimet = persons.map(n => n.name)\n\n    if(newName==='') {\n      setNewName('')\n      setNewNumber('')\n      \n    } else if(nimet.includes(newName)) {\n\n\n      if(window.confirm(`Do you want to update the number of ${newName}?`)) {\n        const nameID = persons.find(n => n.name === newName).id\n\n      personMethods\n      .update(nameID, nameObject)\n      .then(returnedName => {\n      setNewName('')\n      setNewNumber('')\n      setPersons(persons.map(p => p.id !== nameID ? p : returnedName))\n      setErrorMessage(\n        {\n          content:`The number of ${returnedName.name} was updated`,\n          type: true,\n        }\n        )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 2000)\n      })\n      .catch(error => {\n        setErrorMessage(\n          {\n            content: `${newName} has already been removed from server`,\n            type: false,\n          }\n          )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 2000)\n      })\n      } else {\n        setNewName('')\n        setNewNumber('')\n      }\n      \n\n     \n\n    } else {\n      personMethods\n      .create(nameObject)\n      .then(returnedName => {\n        setNewNumber('')\n        setNewName('')\n        setPersons(persons.concat(returnedName))\n        setErrorMessage(\n        {\n          content:`${returnedName.name} was added`,\n          type: true,\n        }\n        )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 2000)\n      })\n\n    }  \n    \n  }\n\n  const removeName = (id) => {\n\n  if(window.confirm(\"You for real wanna delete this guy?\")) {\n    personMethods\n    .remove(id)\n    .then(res => {\n      \n      const nimi = persons.find(n => n.id === id).name\n      setErrorMessage(\n        {\n          content: `${nimi} was removed`,\n          type: true,\n        }\n        )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 2000)\n      setPersons(persons.filter(n => n.id !== id))\n      \n    })\n  }\n\n    \n  }\n\n\n  const filteredPersons = persons.filter((s) => {\n    return s.name.toLowerCase().indexOf(newFilter.toLowerCase()) >= 0\n  })\n\n\n\n\n  const handleNameChange = (event) => {\n    //console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    //console.log(event.target.value)\n    setNewFilter(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Filter filter={newFilter} handler={handleFilterChange} />\n      \n      <h2>Add A Number</h2>\n\n      <Notification message={errorMessage}/>\n\n      <PersonForm\n      submit={addName}\n      name={newName} handleName={handleNameChange}\n      number={newNumber} handleNumber={handleNumberChange}\n      />\n\n      <h2>Numbers</h2>\n\n      <ul>\n          {filteredPersons.map(gubbe =>\n            <Person \n            key={gubbe.name} \n            name={gubbe.name} \n            number={gubbe.number} \n            remove={() => removeName(gubbe.id)} \n            />\n          )}\n      </ul>\n      \n    </div>\n  )\n\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}